from collections import deque


def bfs(x, y):
    queue = deque()
    queue.append((x, y))

    # queue가 빌 때까지 반복
    while queue:
        # queue의 데이터 꺼내기
        x, y = queue.popleft()
        # x,y에 상하좌우 확인하기
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if nx < 0 or nx >= n or ny < 0 or ny >= m:
                continue
            if graph[nx][ny] == 0:
                continue
            if graph[nx][ny] == 1:
                graph[nx][ny] = graph[x][y] + 1
                queue.append((nx, ny))

    return graph[n-1][m-1]


n, m = map(int, input().split())

graph = []
for i in range(n):
    graph.append(list(map(int, input())))

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

print(bfs(0, 0))
